{"version":3,"sources":["webpack:///webpack/bootstrap feb3d779b96bb5ef9e96","webpack:///./src/index.js","webpack:///./src/GL.js","webpack:///./src/glsl/passThrough.glsl","webpack:///./src/glsl/mainFrag.glsl"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC7DA;;AAEA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzMA,6IAA6I,uBAAuB,qBAAqB,wBAAwB,oBAAoB,iFAAiF,iBAAiB,GAAG,G;;;;;;ACA1U,0CAA0C,yBAAyB,eAAe,IAAI,iCAAiC,iBAAiB,4CAA4C,kBAAkB,IAAI,K","file":"app.js?8c0041f4b67471f8ab32","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap feb3d779b96bb5ef9e96","window.GL = require('./GL');\n\nconst foo = 3\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 1\n// module chunks = 0","/**\n * GL\n */\nclass GL {\n  /**\n   * @param {Object} options\n   * @returns {GL}\n   */\n  constructor(options){\n    options = options || {};\n\n    this.canvas = options.canvas || document.createElement('canvas');\n    this.context = this.canvas.getContext('webgl');\n    this.context.clearColor(0.5, 0, 0, 1.0);\n\n    this.POSITION_UNIFORM_NAME = 'pos';\n    this.TEXTURE_UNIFORM_NAME = 'tex';\n\n    this._initGl();\n    this._createPassThroughVertexShader();\n\n    this.time = Date.now();\n    this.dtTime = 0;\n    this.dt = 0;\n\n    this._selectProgram(this.createProgram(require('./glsl/mainFrag.glsl')));\n    // this._selectProgram(this.createProgram(require('./glsl/test/laser.glsl')));\n\n    const color = this._getUniformLocation('options.color');\n    const time = this._getUniformLocation('time');\n    const resolution = this._getUniformLocation('resolution');\n\n    this.uniforms = {};\n    this.uniforms.time = time;\n    this.uniforms.color = color;\n\n    this.context.uniform1f(time, this.time);\n    this.context.uniform2fv(resolution, new Float32Array([this.canvas.width, this.canvas.height]));\n    this.context.uniform4fv(color, new Float32Array([1, 0, 0, 1]));\n\n    this.foo = 0;\n  }\n\n  /**\n   * @param {String} name\n   * @return {undefined}\n   */\n  _getUniformLocation(name) {\n    return this.context.getUniformLocation(this.program, name);\n  }\n\n  /**\n   * _initGl\n   * @return {undefined}\n   */\n  _initGl(){\n    const gl = this.context;\n\n    gl.viewportWidth = this.canvas.width;\n    gl.viewportHeight = this.canvas.height;\n    gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\n\n    gl.clearColor(0.0, 0.1, 0.0, 1.0);\n  }\n\n  /**\n   * Select current program.\n   * @param {Object} program\n   * @return {undefined}\n   */\n  _selectProgram(program){\n    this.program = program;\n    this.context.useProgram(program);\n    this.bindVertices(program);\n  }\n\n  /**\n   * Create the passthrough vertex shader.\n   * @returns {undefined}\n   */\n  _createPassThroughVertexShader(){\n    const self = this,\n      gl = self.context,\n      passThrough = require('./glsl/passThrough.glsl');\n\n    self.vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    self.context.shaderSource(self.vertexShader, passThrough);\n    gl.compileShader(self.vertexShader);\n  }\n\n  /**\n   * Compile a fragment shader.\n   * @param {String} source Source code for the shader.\n   * @returns {Object} program The compiled fragment shader.\n   */\n  createProgram(source) {\n    const self = this,\n      gl = self.context,\n      shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    // compile the provided fragment/texture shader\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new Error(gl.getShaderInfoLog(shader));\n    }\n\n    // link the program specific fragment shader and the generic pass through\n    // shader into a program\n    const program = gl.createProgram();\n    gl.attachShader(program, self.vertexShader);\n    gl.attachShader(program, shader);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(program));\n    }\n\n    return program;\n  }\n\n  /**\n   * bindVertices\n   * @param {Object} program\n   * @return {undefined}\n   */\n  bindVertices(program){\n    var gl = this.context,\n      renderer = program;\n\n    // bind vertices\n    var position = gl.getAttribLocation(renderer, this.POSITION_UNIFORM_NAME);\n    var vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n    // define a square that covers the screen\n    var vertices = [\n      -1.0, -1.0, 0.0, // bottom left\n      1.0, -1.0, 0.0,\t // bottom right\n      1.0, 1.0, 0.0,\t // top right\n      -1.0, 1.0, 0.0 // top left\n    ];\n\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(position, 3, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(position);\n\n    // bind texture cords\n    var texture = gl.getAttribLocation(renderer, this.TEXTURE_UNIFORM_NAME);\n    var texCoords = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoords);\n    var textureCoords = [\n      0.0, 0.0,\n      1.0, 0.0,\n      1.0, 1.0,\n      0.0, 1.0\n    ];\n\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoords), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(texture, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(texture);\n\n    // index to vertices\n    var indices = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n    // tesselate square into triangles\n    // indeces into vertex array creating triangles, with counter-clockwise winding\n    var vertexIndices = [\n      0, 1, 2,\t// bottom right triangle\n      0, 2, 3 // top left triangle\n    ];\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vertexIndices), gl.STATIC_DRAW);\n  }\n\n  /**\n   * Update the delta time passed to shaders.\n   * @return {undefined}\n   */\n  _updateTime(){\n    const time = Date.now();\n    this.dt = time - this.time;\n    this.time = time;\n\n    this.dtTime += this.dt/1000;\n  }\n\n  /**\n   * Run the shader programs in a loop.\n   * @return {undefined}\n   */\n  runLoop(){\n    this._updateTime();\n    this.context.uniform1f(this.uniforms.time, this.dtTime);\n\n    this.context.clear(this.context.COLOR_BUFFER_BIT);\n    this.context.drawElements(this.context.TRIANGLES, 6, this.context.UNSIGNED_SHORT, 0);\n    requestAnimationFrame(this.runLoop.bind(this));\n  }\n}\n\nmodule.exports = GL;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/GL.js\n// module id = 2\n// module chunks = 0","module.exports = \"// vertex shader for a single quad\\n// work is performed in the operation specific texture shader\\n\\nprecision highp float;\\n\\nattribute vec3 pos;\\nattribute vec2 tex;\\nvarying vec2   outTex;\\nvoid main(void)\\n{\\n  // just pass the position and texture coords\\n  gl_Position = vec4(pos, 1.0);\\n  outTex = tex;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/glsl/passThrough.glsl\n// module id = 4\n// module chunks = 0","module.exports = \"precision mediump float;\\n\\nstruct test_options {\\n  vec4 color;\\n};\\n\\nuniform test_options options;\\n\\nvoid main() {\\n  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); // options.color; \\n}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/glsl/mainFrag.glsl\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}